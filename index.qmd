---
title: "HAX712X: Software development for data science"
---

(Almost) everything you need to know as an applied mathematician/statistician concerning coding and system administration.

## Teachers

- Joseph Salmon: [joseph.salmon@umontpellier.fr](mailto:joseph.salmon@umontpellier.fr),
- Benjamin Charlier: [benjamin.charlier@umontpellier.fr](mailto:benjamin.charlier@umontpellier.fr)

This course material was improved with the help of some students including:

- [Amelie Vernay](https://github.com/AmelieVernay)
- [Tanguy Lefort](https://github.com/tanglef)


## Prerequisite

Students are expected to know basic notions of probabilities, optimization, linear algebra and statistics for this course.
Some rudiments in coding are also expected (if, for, while, functions) but not mandatory.

## Course description

This course focuses on discovering good coding practices (the language used is Python, but some elements of bash and git will also be useful) for professional coding.
A special focus on data processing and visualization will be at the heart of the course.
We will mostly focus on basic programming concepts, as well as on discovering the Python scientific libraries, including ```numpy, scipy, pandas, matplotlib, seaborn```.
Beyond `pandas` ninja skills, we will also introduce modern practices for coders: (unitary) tests, version control, documentation generation, etc.

|Date      |Teacher |Details |
|----------|------|------------------------------------------------------------------------------------------------------|
|11/09/2023|BC    |[Command-line tools](Courses/Bash/tp.qmd)                                                             |
|22/09/2023|BC    |[Version control with Git](Courses/Git/tp.qmd)                                                        |
|29/09/2023|BC    |[IDE](Courses/IDE/tp.qmd) / [Python virtual environment](Courses/Venv/tp.qmd)                         |
|06/10/2023|BC+JS |[Creating a Python Module](Courses/Python-modules/tp.qmd), [Classes & Exceptions](Courses/ClassesExceptions/tp.qmd)|
|13/10/2023|JS    |[Markdown to html (Quarto)](Courses/Docs/tp.qmd), [Unit Tests](Courses/Test/tp.qmd)|
|20/10/2023|JS    |[Pandas: Titanic dataset](Courses/Pandas/pandas_titanic.qmd), [Pandas: Airparif dataset](Courses/Pandas/pandas_airparif.qmd), [Pandas: Bikes dataset](Courses/Pandas/pandas_titanic.qmd)|
|27/10/2023|BC    |[Continuous Integration (CI)](Courses/CI/tp.qmd), [Generating a documentation (Sphinx)](Courses/Docs/tp.qmd), [Deploy on Pipy](Courses/Python-modules/tp.qmd)|
|10/11/2023|JS    |[SciPy](Courses/ScipyNumpy/tp.qmd)                                                                    |
|17/11/2023|JS    |[Time & memory efficiency](Courses/TimeMemory/tp.qmd)                                                 |
|20/11/2023|JS    |[Graphs](Courses/TimeMemory/tp.qmd)                                                                   |
|15/12/2023|BC+JS |The end:  Project presentations                                                                       |
:  {.striped}


## Grading

For this course, the grading consists of two projects: one group project (group composition available on [Moodle](https://moodle.umontpellier.fr/course/view.php?id=22454)) and a personal one.

Please carefully read the [projects description page](Projects/2023-2024/README.qmd).

### Bonus

**1 supplementary point** on the final grade of the course can be obtained for contributions to improve the course material (practicals, Readme, etc.).
See the [Bonus](Bonus/README.qmd) section for more details on how to proceed.



## Books and other resources

The resources for the course are available on the present `GitHub` repository. Additional elementary elements (**in French**) on Python are available in the course [HLMA310](http://josephsalmon.eu/HLMA310.html) and the associated lecture notes [IntroPython.pdf](http://josephsalmon.eu/enseignement/Montpellier/HLMA310/IntroPython.pdf).

### Moodle webpage

The [Moodle web page](https://moodle.umontpellier.fr/course/view.php?id=22454) is available to registered students only.

### Additional resources

*  (General): [The Missing Semester of Your CS Education](https://missing.csail.mit.edu/)
*  (Algorithmic basis): [Algorithms](https://jeffe.cs.illinois.edu/teaching/algorithms/#book), by Jeff Erickson
*  (Data Science): [Python Data Science Handbook, With Application to Understanding Data](https://jakevdp.github.io/PythonDataScienceHandbook/) by J. Van DerPlas, 2016;<br>
 **videos**: [Reproducible Data Analysis in Jupyter](http://jakevdp.github.io/blog/2017/03/03/reproducible-data-analysis-in-jupyter/)
*  (General) Skiena, *The algorithm design manual*, 1998
*  (General) Courant et *al.*, *Informatique pour tous en classes préparatoires aux grandes écoles: Manuel d'algorithmique et programmation structurée avec Python*, 2013, (french)
*  (General/data science) Guttag, *Introduction to Computation and Programming*,
2016
*  (Code and style) Boswell et Foucher, *The Art of Readable Code*, 2011
*  (Scientific computing tools for Python) [Scipy lectures notes](http://www.scipy-lectures.org/)
*  (Datasets) [Open Climate Data](http://openclimatedata.net/)
